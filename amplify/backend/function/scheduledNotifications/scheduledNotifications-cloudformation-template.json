{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{\"createdOn\":\"Linux\",\"createdBy\":\"Amplify\",\"createdWith\":\"10.0.0\",\"stackType\":\"function-Lambda\",\"metadata\":{}}",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    },
    "apiaterbruketwebappGraphQLAPIIdOutput": {
      "Type": "String",
      "Default": "apiaterbruketwebappGraphQLAPIIdOutput"
    },
    "apiaterbruketwebappGraphQLAPIEndpointOutput": {
      "Type": "String",
      "Default": "apiaterbruketwebappGraphQLAPIEndpointOutput"
    },
    "authaterbruketwebapp75287c9aUserPoolId": {
      "Type": "String",
      "Default": "authaterbruketwebapp75287c9aUserPoolId"
    },
    "reservationDaysUntilNotifications": {
      "Type": "String"
    },
    "reservationDaysUntilCancellation": {
      "Type": "String"
    },
    "sesSenderEmail": {
      "Type": "String"
    },
    "sesAppUrl": {
      "Type": "String"
    },
    "opensearchUrl": {
      "Type": "String"
    },
    "borrowDaysBeforeReminder": {
      "Type": "String"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "scheduledNotifications",
            {
              "Fn::Join": [
                "",
                [
                  "scheduledNotifications",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "API_ATERBRUKETWEBAPP_GRAPHQLAPIIDOUTPUT": {
              "Ref": "apiaterbruketwebappGraphQLAPIIdOutput"
            },
            "API_ATERBRUKETWEBAPP_GRAPHQLAPIENDPOINTOUTPUT": {
              "Ref": "apiaterbruketwebappGraphQLAPIEndpointOutput"
            },
            "AUTH_ATERBRUKETWEBAPP75287C9A_USERPOOLID": {
              "Ref": "authaterbruketwebapp75287c9aUserPoolId"
            },
            "RESERVATION_DAYS_UNTIL_NOTIFICATIONS": {
              "Ref": "reservationDaysUntilNotifications"
            },
            "RESERVATION_DAYS_UNTIL_CANCELLATION": {
              "Ref": "reservationDaysUntilCancellation"
            },
            "SES_SENDER_EMAIL": {
              "Ref": "sesSenderEmail"
            },
            "SES_APP_URL": {
              "Ref": "sesAppUrl"
            },
            "OPENSEARCH_URL": {
              "Ref": "opensearchUrl"
            },
            "BORROW_DAYS_BEFORE_REMINDER": {
              "Ref": "borrowDaysBeforeReminder"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Layers": [],
        "Timeout": 25
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "aterbruketwebappLambdaRole1bc24038",
            {
              "Fn::Join": [
                "",
                [
                  "aterbruketwebappLambdaRole1bc24038",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            },
            {
              "Action": [
                "ses:SendEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:eu-west-1:165945531802:identity/ideutvecklingochinnovation@gmail.com"
            },
            {
              "Action": [
                "ses:SendEmail"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ses:eu-west-1:165945531802:identity/*@helsingborg.se",
              "Condition": {
                "StringLike": {
                  "ses:FromAddress": "*@helsingborg.se",
                  "ses:FeedbackAddress": "*@helsingborg.se",
                  "ses:Recipients": "*@helsingborg.se"
                }
              }
            },
            {
              "Action": [
                "es:ESHttpPost"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:es:eu-west-1:165945531802:domain/amplify-opense-9v8syau2vha5/*"
            },
            {
              "Action": [
                "es:ESHttpPost"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:es:eu-west-1:165945531802:domain/amplify-opense-lpguchggbxys/*"
            },
            {
              "Action": [
                "ses:SendEmail"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ses:*:165945531802:configuration-set/*",
                "arn:aws:ses:*:165945531802:identity/*"
              ]
            }
          ]
        }
      }
    },
    "CloudWatchEvent": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Schedule rule for Lambda",
        "ScheduleExpression": {
          "Ref": "CloudWatchRule"
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunction",
                "Arn"
              ]
            },
            "Id": {
              "Ref": "LambdaFunction"
            }
          }
        ]
      }
    },
    "PermissionForEventsToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CloudWatchEvent",
            "Arn"
          ]
        }
      }
    },
    "LambdaDynamoDbPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "dynamo-db-read-items-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": "dynamodb:Query",
              "Resource": "*"
            }
          ]
        }
      }
    },
    "AmplifyResourcesPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "appsync:Get*",
                "appsync:List*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:appsync:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":apis/",
                      {
                        "Ref": "apiaterbruketwebappGraphQLAPIIdOutput"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "cognito-identity:Describe*",
                "cognito-identity:Get*",
                "cognito-identity:List*",
                "cognito-idp:Describe*",
                "cognito-idp:AdminGetDevice",
                "cognito-idp:AdminGetUser",
                "cognito-idp:AdminList*",
                "cognito-idp:List*",
                "cognito-sync:Describe*",
                "cognito-sync:Get*",
                "cognito-sync:List*",
                "iam:ListOpenIdConnectProviders",
                "iam:ListRoles",
                "sns:ListPlatformApplications"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:cognito-idp:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":userpool/",
                      {
                        "Ref": "authaterbruketwebapp75287c9aUserPoolId"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    },
    "CloudWatchEventRule": {
      "Value": {
        "Ref": "CloudWatchEvent"
      }
    },
    "LambdaExecutionRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaExecutionRole",
          "Arn"
        ]
      }
    }
  }
}